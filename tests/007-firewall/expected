LOG: Parsing Complete 
LOG: MetaTyping Complete 
LOG: Typing Complete 
LOG : Showing ModuleIR
LOG : Normalising ChannelIR
LOG : Convert to MicroSV IR
LOG : Convert to MicroSV
LOG : Pretty Printing
typedef logic[7:0] eightBit; 

typedef logic[31:0] ttBit; 

typedef logic[31:0] ip_address; 

typedef logic[15:0] ip_port; 

typedef logic[7:0] ip_protocol; 

typedef struct packed
{
  ip_address srcAdr;
  ip_port srcPort;
  ip_address dstAdr;
  ip_port dstPort;
  ip_protocol protocol;
} ipheader; 

module sys  
(
  output logic clk,
  output logic rst
);
// TO ADD
endmodule; 

module mac  
(
  input logic clk,
  input logic rst,
  output eightBit data_out,
  output logic src_rdy_out,
  input logic dst_rdy_out,
  output logic sof_out,
  output logic eof_out,
  input eightBit data_in,
  input logic src_rdy_in,
  output logic dst_rdy_in,
  input logic sof_in,
  input logic eof_in
);
// TO ADD
endmodule; 

module iconv  
(
  input logic clk,
  input logic rst,
  input eightBit data_in,
  input logic src_rdy_in,
  output logic dst_rdy_in,
  input logic sof_in,
  input logic eof_in,
  output ttBit data_out,
  output logic src_rdy_out,
  input logic dst_rdy_out,
  output logic sof_out,
  output logic eof_out
);
// TO ADD
endmodule; 

module pparser  
(
  input logic clk,
  input logic rst,
  input ttBit data_in,
  input logic src_rdy_in,
  output logic dst_rdy_in,
  input logic sof_in,
  input logic eof_in,
  output logic update_out,
  output ipheader five_tuple_out,
  output ttBit data_out,
  output logic src_rdy_out,
  input logic dst_rdy_out,
  output logic sof_out,
  output logic eof_out
);
// TO ADD
endmodule; 

module pbuffer  
(
  input logic clk,
  input logic rst,
  input ttBit data_in,
  input logic src_rdy_in,
  output logic dst_rdy_in,
  input logic sof_in,
  input logic eof_in,
  output ttBit data_out,
  output logic src_rdy_out,
  input logic dst_rdy_out,
  output logic sof_out,
  output logic eof_out
);
// TO ADD
endmodule; 

module decider  
(
  input logic clk,
  input logic rst,
  input ttBit data_in,
  input logic src_rdy_in,
  output logic dst_rdy_in,
  input logic sof_in,
  input logic eof_in,
  input logic result_in,
  output ttBit data_out,
  output logic src_rdy_out,
  input logic dst_rdy_out,
  output logic sof_out,
  output logic eof_out
);
// TO ADD
endmodule; 

module rulebase  
(
  input logic clk,
  input logic rst,
  input logic update_in,
  input ipheader five_tuple_in,
  output logic result_out
);
// TO ADD
endmodule; 

module oconv  
(
  input logic clk,
  input logic rst,
  input ttBit data_in,
  input logic src_rdy_in,
  output logic dst_rdy_in,
  input logic sof_in,
  input logic eof_in,
  output eightBit data_out,
  output logic src_rdy_out,
  input logic dst_rdy_out,
  output logic sof_out,
  output logic eof_out
);
// TO ADD
endmodule; 

module Top ();
  logic fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk;
  logic fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst;
  eightBit mac_data_out_iconv_data_in;
  logic mac_src_rdy_out_iconv_src_rdy_in;
  logic iconv_dst_rdy_in_mac_dst_rdy_out;
  logic mac_sof_out_iconv_sof_in;
  logic mac_eof_out_iconv_eof_in;
  ttBit iconv_data_out_pparser_data_in;
  logic iconv_src_rdy_out_pparser_src_rdy_in;
  logic pparser_dst_rdy_in_iconv_dst_rdy_out;
  logic iconv_sof_out_pparser_sof_in;
  logic iconv_eof_out_pparser_eof_in;
  logic pparser_update_out_rulebase_update_in;
  ipheader pparser_five_tuple_out_rulebase_five_tuple_in;
  ttBit pparser_data_out_pbuffer_data_in;
  logic pparser_src_rdy_out_pbuffer_src_rdy_in;
  logic pbuffer_dst_rdy_in_pparser_dst_rdy_out;
  logic pparser_sof_out_pbuffer_sof_in;
  logic pparser_eof_out_pbuffer_eof_in;
  ttBit pbuffer_data_out_decider_data_in;
  logic pbuffer_src_rdy_out_decider_src_rdy_in;
  logic decider_dst_rdy_in_pbuffer_dst_rdy_out;
  logic pbuffer_sof_out_decider_sof_in;
  logic pbuffer_eof_out_decider_eof_in;
  logic rulebase_result_out_decider_result_in;
  ttBit decider_data_out_oconv_data_in;
  logic decider_src_rdy_out_oconv_src_rdy_in;
  logic oconv_dst_rdy_in_decider_dst_rdy_out;
  logic decider_sof_out_oconv_sof_in;
  logic decider_eof_out_oconv_eof_in;
  eightBit oconv_data_out_mac_data_in;
  logic oconv_src_rdy_out_mac_src_rdy_in;
  logic mac_dst_rdy_in_oconv_dst_rdy_out;
  logic oconv_sof_out_mac_sof_in;
  logic oconv_eof_out_mac_eof_in;
  mac lightclick_module_0
     (
       .clk(fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk),
       .rst(fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst),
       .data_out(mac_data_out_iconv_data_in),
       .src_rdy_out(mac_src_rdy_out_iconv_src_rdy_in),
       .dst_rdy_out(iconv_dst_rdy_in_mac_dst_rdy_out),
       .sof_out(mac_sof_out_iconv_sof_in),
       .eof_out(mac_eof_out_iconv_eof_in),
       .data_in(oconv_data_out_mac_data_in),
       .src_rdy_in(oconv_src_rdy_out_mac_src_rdy_in),
       .dst_rdy_in(mac_dst_rdy_in_oconv_dst_rdy_out),
       .sof_in(oconv_sof_out_mac_sof_in),
       .eof_in(oconv_eof_out_mac_eof_in)
     );
  oconv lightclick_module_1
     (
       .clk(fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk),
       .rst(fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst),
       .data_in(decider_data_out_oconv_data_in),
       .src_rdy_in(decider_src_rdy_out_oconv_src_rdy_in),
       .dst_rdy_in(oconv_dst_rdy_in_decider_dst_rdy_out),
       .sof_in(decider_sof_out_oconv_sof_in),
       .eof_in(decider_eof_out_oconv_eof_in),
       .data_out(oconv_data_out_mac_data_in),
       .src_rdy_out(oconv_src_rdy_out_mac_src_rdy_in),
       .dst_rdy_out(mac_dst_rdy_in_oconv_dst_rdy_out),
       .sof_out(oconv_sof_out_mac_sof_in),
       .eof_out(oconv_eof_out_mac_eof_in)
     );
  decider lightclick_module_2
     (
       .clk(fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk),
       .rst(fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst),
       .data_in(pbuffer_data_out_decider_data_in),
       .src_rdy_in(pbuffer_src_rdy_out_decider_src_rdy_in),
       .dst_rdy_in(decider_dst_rdy_in_pbuffer_dst_rdy_out),
       .sof_in(pbuffer_sof_out_decider_sof_in),
       .eof_in(pbuffer_eof_out_decider_eof_in),
       .result_in(rulebase_result_out_decider_result_in),
       .data_out(decider_data_out_oconv_data_in),
       .src_rdy_out(decider_src_rdy_out_oconv_src_rdy_in),
       .dst_rdy_out(oconv_dst_rdy_in_decider_dst_rdy_out),
       .sof_out(decider_sof_out_oconv_sof_in),
       .eof_out(decider_eof_out_oconv_eof_in)
     );
  rulebase lightclick_module_3
     (
       .clk(fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk),
       .rst(fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst),
       .update_in(pparser_update_out_rulebase_update_in),
       .five_tuple_in(pparser_five_tuple_out_rulebase_five_tuple_in),
       .result_out(rulebase_result_out_decider_result_in)
     );
  pbuffer lightclick_module_4
     (
       .clk(fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk),
       .rst(fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst),
       .data_in(pparser_data_out_pbuffer_data_in),
       .src_rdy_in(pparser_src_rdy_out_pbuffer_src_rdy_in),
       .dst_rdy_in(pbuffer_dst_rdy_in_pparser_dst_rdy_out),
       .sof_in(pparser_sof_out_pbuffer_sof_in),
       .eof_in(pparser_eof_out_pbuffer_eof_in),
       .data_out(pbuffer_data_out_decider_data_in),
       .src_rdy_out(pbuffer_src_rdy_out_decider_src_rdy_in),
       .dst_rdy_out(decider_dst_rdy_in_pbuffer_dst_rdy_out),
       .sof_out(pbuffer_sof_out_decider_sof_in),
       .eof_out(pbuffer_eof_out_decider_eof_in)
     );
  pparser lightclick_module_5
     (
       .clk(fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk),
       .rst(fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst),
       .data_in(iconv_data_out_pparser_data_in),
       .src_rdy_in(iconv_src_rdy_out_pparser_src_rdy_in),
       .dst_rdy_in(pparser_dst_rdy_in_iconv_dst_rdy_out),
       .sof_in(iconv_sof_out_pparser_sof_in),
       .eof_in(iconv_eof_out_pparser_eof_in),
       .update_out(pparser_update_out_rulebase_update_in),
       .five_tuple_out(pparser_five_tuple_out_rulebase_five_tuple_in),
       .data_out(pparser_data_out_pbuffer_data_in),
       .src_rdy_out(pparser_src_rdy_out_pbuffer_src_rdy_in),
       .dst_rdy_out(pbuffer_dst_rdy_in_pparser_dst_rdy_out),
       .sof_out(pparser_sof_out_pbuffer_sof_in),
       .eof_out(pparser_eof_out_pbuffer_eof_in)
     );
  iconv lightclick_module_6
     (
       .clk(fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk),
       .rst(fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst),
       .data_in(mac_data_out_iconv_data_in),
       .src_rdy_in(mac_src_rdy_out_iconv_src_rdy_in),
       .dst_rdy_in(iconv_dst_rdy_in_mac_dst_rdy_out),
       .sof_in(mac_sof_out_iconv_sof_in),
       .eof_in(mac_eof_out_iconv_eof_in),
       .data_out(iconv_data_out_pparser_data_in),
       .src_rdy_out(iconv_src_rdy_out_pparser_src_rdy_in),
       .dst_rdy_out(pparser_dst_rdy_in_iconv_dst_rdy_out),
       .sof_out(iconv_sof_out_pparser_sof_in),
       .eof_out(iconv_eof_out_pparser_eof_in)
     );
  sys lightclick_module_7
     (
       .clk(fan_out_from_sys_clk_to_mac_clk_iconv_clk_pparser_clk_pbuffer_clk_decider_clk_rulebase_clk_oconv_clk),
       .rst(fan_out_from_sys_rst_to_mac_rst_iconv_rst_pparser_rst_pbuffer_rst_decider_rst_rulebase_rst_oconv_rst)
     );

endmodule;
LOG : Bye
